<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SandcastleBuilder.Components</name>
    </assembly>
    <members>
        <member name="T:SandcastleBuilder.Components.CachedCopyFromIndexComponent">
             <summary>
             This is a derived <b>CopyFromIndexComponent</b> class that loads the
             index document cache from a serialized binary file rather than loading
             it from the XML reflection data files.  This can significantly decrease
             the amount of time needed to instantiate the component.
             </summary>
             <example>
             <code lang="xml" title="Cached Reflection Index Data Example">
             &lt;!-- Cached Reflection Index Data component.  This should replace
                  the first instance of the CopyFromIndexComponent. --&gt;
             &lt;component id="Cached Reflection Index Data"
               type="SandcastleBuilder.Components.CachedCopyFromIndexComponent"
               assembly="C:\SandcastleBuilder\SandcastleBuilder.Components.dll"&gt;
                 &lt;index name="reflection" value="/reflection/apis/api"
                    key="@id" cache="10"&gt;
                     &lt;cache base="C:\Program Files\Sandcastle\Data\Reflection"
                         recurse="true" files="*.xml"
                         cacheFile="C:\SandcastleBuilder\Cache\Reflection.cache"/&gt;
                     &lt;data files="reflection.xml" /&gt;
                 &lt;/index&gt;
                 &lt;copy name="reflection" source="*" target="/document/reference" /&gt;
             &lt;/component&gt;
             </code>
            
             <code lang="xml" title="Cached Framework Comments Index Data Example">
             &lt;!-- Cached Framework Comments Index Data component.  This should
                  replace the third instance of the CopyFromIndexComponent. --&gt;
             &lt;component id="Cached Framework Comments Index Data"
               type="SandcastleBuilder.Components.CachedCopyFromIndexComponent"
               assembly="C:\SandcastleBuilder\SandcastleBuilder.Components.dll"&gt;
                 &lt;index name="comments" value="/doc/members/member"
                   key="@name" cache="100"&gt;
                   &lt;cache files="%SystemRoot%\Microsoft.NET\Framework\v2.0.50727\en\*.xml"
                     cacheFile="C:\SandcastleBuilder\Cache\en_2.0.50727.cache" /&gt;
                   &lt;data files="ExtraComments.xml" /&gt;
                   &lt;data files="TestDoc.xml" /&gt;
                   &lt;data files="_InheritedDocs_.xml" /&gt;
                 &lt;/index&gt;
                 &lt;copy name="comments" source="*" target="/document/comments" /&gt;
             &lt;/component&gt;
             </code>
             </example>
        </member>
        <member name="M:SandcastleBuilder.Components.CachedCopyFromIndexComponent.#ctor(Microsoft.Ddue.Tools.BuildAssembler,System.Xml.XPath.XPathNavigator)">
            <summary>
            Constructor
            </summary>
            <param name="assembler">A reference to the build assembler.</param>
            <param name="configuration">The configuration information</param>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">This is thrown if
            an error is detected in the configuration.</exception>
        </member>
        <member name="M:SandcastleBuilder.Components.CachedCopyFromIndexComponent.LoadCache(System.Xml.XPath.XPathNavigator,System.String,System.Xml.XPath.XPathNavigator)">
            <summary>
            Load a cached index
            </summary>
            <param name="index">The parent index node</param>
            <param name="name">The name of the index</param>
            <param name="cache">The cache settings</param>
        </member>
        <member name="M:SandcastleBuilder.Components.CachedCopyFromIndexComponent.Dispose(System.Boolean)">
            <summary>
            This is used in the debug build to get an idea of how many files
            were kept loaded in the cache.
            </summary>
            <param name="disposing">Pass true to dispose of the managed and unmanaged resources or false to just
            dispose of the unmanaged resources.</param>
        </member>
        <member name="T:SandcastleBuilder.Components.CachedResolveReferenceLinksComponent">
            <summary>
            This is a derived <b>ResolveReferenceLinksComponent2</b> class that
            loads cached MSDN URLs from a serialized binary file rather than
            letting the base component invoke the web service to look them up.
            This can significantly decrease the amount of time needed to perform
            a build.
            </summary>
            <remarks>The cache is built cumulatively over time rather than having
            all 170,000+ resolved entries loaded, most of which would never be
            used.  If new URLs are added to the cache during a build, the cache is
            saved during disposal so that the new entries are used on subsequent
            builds.</remarks>
            <example>
            <code lang="xml" title="Example configuration">
            &lt;!-- Cached MSDN URL references component.  This should replace
                 the standard ResolveReferenceLinksComponent2 build component. --&gt;
            &lt;component type="SandcastleBuilder.Components.CachedResolveReferenceLinksComponent"
              assembly="C:\SandcastleBuilder\SandcastleBuilder.Components.dll"
              locale="en-us" linkTarget="_blank"&gt;
                &lt;cache filename="C:\SandcastleBuilder\Cache\MsdnUrl.cache" /&gt;
                &lt;targets base="C:\Program Files\Sandcastle\Data\Reflection"
                    recurse="true" files="*.xml" type="MSDN" /&gt;
                &lt;targets files="reflection.xml" type="Local" /&gt;
            &lt;/component&gt;
            </code>
            </example>
        </member>
        <member name="M:SandcastleBuilder.Components.CachedResolveReferenceLinksComponent.#ctor(Microsoft.Ddue.Tools.BuildAssembler,System.Xml.XPath.XPathNavigator)">
            <summary>
            Constructor
            </summary>
            <param name="assembler">A reference to the build assembler.</param>
            <param name="configuration">The configuration information</param>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">This is thrown if
            an error is detected in the configuration.</exception>
        </member>
        <member name="M:SandcastleBuilder.Components.CachedResolveReferenceLinksComponent.Dispose(System.Boolean)">
            <summary>
            This is overriden to save the updated cache when disposed
            </summary>
            <param name="disposing">Pass true to dispose of the managed and unmanaged resources or false to just
            dispose of the unmanaged resources.</param>
        </member>
        <member name="T:SandcastleBuilder.Components.CodeBlockComponent">
             <summary>
             This build component is used to search for &lt;code&gt; XML comment tags and colorize the code within
             them.  It can also include code from an external file or a region within the file.
             </summary>
             <remarks>The colorizer files are only copied once and only if code is actually colorized.  If the files
             already exist (i.e. additional content has replaced them), they are not copied either.  That way, you
             can customize the color stylesheet as you see fit without modifying the default stylesheet.</remarks>
             <example>
             <code lang="xml" title="Example configuration">
             &lt;!-- Code block component configuration.  This must appear before
                  the TransformComponent. --&gt;
             &lt;component type="SandcastleBuilder.Components.CodeBlockComponent"
               assembly="C:\SandcastleBuilder\SandcastleBuilder.Components.dll"&gt;
                 &lt;!-- Base path for relative filenames in source
                      attributes (optional). --&gt;
                 &lt;basePath value="..\SandcastleComponents" /&gt;
            
                 &lt;!-- Base output paths for the files (required).  These should
                      match the parent folder of the output path of the HTML files
                      used in the SaveComponent instances. --&gt;
                 &lt;outputPaths&gt;
                   &lt;path value="Output\HtmlHelp1\" /&gt;
                   &lt;path value="Output\MSHelp2\" /&gt;
                   &lt;path value="Output\MSHelpViewer\" /&gt;
                   &lt;path value="Output\Website\" /&gt;
                 &lt;/outputPaths&gt;
                 
                 &lt;!-- Allow missing source files (Optional).  If omitted,
                      it will generate errors if referenced source files
                      are missing. --&gt;
                 &lt;allowMissingSource value="false" /&gt;
             
                 &lt;!-- Remove region markers from imported code blocks.  If omitted,
                      region markers in imported code blocks are left alone. --&gt;
                 &lt;removeRegionMarkers value="false" /&gt;
            
                 &lt;!-- Code colorizer options (required).
                   Attributes:
                     Language syntax configuration file (required)
                     XSLT stylesheet file (required)
                     CSS stylesheet file (required)
                     Script file (required)
                     Disabled (optional, leading whitespace normalization only)
                     Default language (optional)
                     Enable line numbering (optional)
                     Enable outlining (optional)
                     Keep XML comment "see" tags within the code (optional)
                     Tab size for unknown languages (optional, 0 = use default)
                     Use language name as default title (optional) --&gt;
                 &lt;colorizer syntaxFile="highlight.xml" styleFile="highlight.xsl"
                   stylesheet="highlight.css" scriptFile="highlight.js"
                   disabled="false" language="cs" numberLines="false" outlining="false"
                   keepSeeTags="false" tabSize="0" defaultTitle="true" /&gt;
             &lt;/component&gt;
             </code>
            
             <code lang="xml" title="Examples as used in XML comments.">
             &lt;example&gt;
             A basic code block that uses the configuration defaults:
             &lt;code&gt;
             /// Code to colorize
             &lt;/code&gt;
            
             Override options with block-specific options:
             &lt;code lang="xml" numberLines="true" outlining="false" tabSize="8" &gt;
                 &amp;lt;XmlTags/&amp;gt;
             &lt;/code&gt;
            
             An entire external file or a delimited region from it can be
             included.  This allows you to compile your example code externally
             to ensure that it is still valid and saves you from maintaining it
             in two places.
            
             Retrieve all code from an external file.  Use VB.NET syntax.
             &lt;code source="..\Examples\WholeDemo.vb" lang="vbnet"/&gt;
            
             Retrieve a specific #region from an external file.
             &lt;code source="..\Examples\SeveralExamples.vb"
                 region="Example 1" lang="vbnet"/&gt;
             
             Keep &lt;see&gt; tags within comments so that they are converted to
             links to the help topics.
             &lt;code keepSeeTags="true"&gt;
             int x = this.&lt;see cref="CountStuff"&gt;CountStuff&lt;/see&gt;(true);
             
             string value = this.&lt;see cref="System.Object.ToString"&gt;
             &lt;code&gt;
            
             &lt;example&gt;
             </code>
             </example>
        </member>
        <member name="M:SandcastleBuilder.Components.CodeBlockComponent.#ctor(Microsoft.Ddue.Tools.BuildAssembler,System.Xml.XPath.XPathNavigator)">
            <summary>
            Constructor
            </summary>
            <param name="assembler">A reference to the build assembler.</param>
            <param name="configuration">The configuration information</param>
            <remarks>See the <see cref="T:SandcastleBuilder.Components.CodeBlockComponent"/> class topic for an example of the configuration and
            usage.</remarks>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">This is thrown if an error is detected in the
            configuration.</exception>
        </member>
        <member name="M:SandcastleBuilder.Components.CodeBlockComponent.Apply(System.Xml.XmlDocument,System.String)">
            <summary>
            This is implemented to perform the code colorization.
            </summary>
            <param name="document">The XML document with which to work.</param>
            <param name="key">The key (member name) of the item being documented.</param>
        </member>
        <member name="M:SandcastleBuilder.Components.CodeBlockComponent.LoadNestedCodeBlocks(System.String,System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathExpression,Microsoft.Ddue.Tools.MessageLevel)">
            <summary>
            This is used to load a set of nested code blocks from external files
            </summary>
            <param name="key">The topic key</param>
            <param name="navCode">The node in which to replace the nested code blocks</param>
            <param name="nestedCode">The XPath expression used to locate the nested code blocks.</param>
            <param name="msgLevel">The message level for missing source code</param>
            <returns>The HTML encoded blocks extracted from the files as a single code block</returns>
            <remarks>Only source and region attributes are used.  All other attributes are obtained from the
            parent code block.  Text nodes are created to replace the nested code tags so that any additional
            text in the parent code block is also retained.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Components.CodeBlockComponent.LoadCodeBlock(System.String,System.Xml.XmlNode,Microsoft.Ddue.Tools.MessageLevel)">
            <summary>
            This is used to load a code block from an external file.
            </summary>
            <param name="key">The topic key</param>
            <param name="code">The node containing the attributes</param>
            <param name="msgLevel">The message level for missing source code</param>
            <returns>The HTML encoded block extracted from the file.</returns>
        </member>
        <member name="M:SandcastleBuilder.Components.CodeBlockComponent.TransformComponent_TopicTransformed(System.Object,System.EventArgs)">
            <summary>
            This is used to complete the process by inserting the colorized code within the topic after it has
            been transformed to HTML.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
            <remarks>A two-phase approach is needed as the HTML for the colorized code wouldn't make it through
            the conceptual content XSL transformations.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Components.CodeBlockComponent.ConfigureComponent(System.String)">
            <summary>
            This static method is used by the Sandcastle Help File Builder to let the component perform its own
            configuration.
            </summary>
            <param name="currentConfig">The current configuration XML fragment</param>
            <returns>A string containing the new configuration XML fragment</returns>
        </member>
        <member name="T:SandcastleBuilder.Components.CodeBlockConfigDlg">
            <summary>
            This form is used to configure the settings for the <see cref="T:SandcastleBuilder.Components.CodeBlockComponent"/>
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Components.CodeBlockConfigDlg.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="currentConfig">The current XML configuration XML fragment</param>
        </member>
        <member name="M:SandcastleBuilder.Components.CodeBlockConfigDlg.btnCancel_Click(System.Object,System.EventArgs)">
            <summary>
            Close without saving
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Components.CodeBlockConfigDlg.lnkCodePlexSHFB_LinkClicked(System.Object,System.Windows.Forms.LinkLabelLinkClickedEventArgs)">
            <summary>
            Go to the CodePlex home page of the Sandcastle Help File Builder
            project.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Components.CodeBlockConfigDlg.btnOK_Click(System.Object,System.EventArgs)">
            <summary>
            Validate the configuration and save it
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Components.CodeBlockConfigDlg.btnSelectFolder_Click(System.Object,System.EventArgs)">
            <summary>
            Select the base source folder
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Components.CodeBlockConfigDlg.SelectFile_Click(System.Object,System.EventArgs)">
            <summary>
            Select one of the file types
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="F:SandcastleBuilder.Components.CodeBlockConfigDlg.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Components.CodeBlockConfigDlg.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.Components.CodeBlockConfigDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Components.CodeBlockConfigDlg.Configuration">
            <summary>
            This is used to return the configuration information
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Components.IntelliSenseComponent">
            <summary>
            This build component is used to generate IntelliSense files based on the documented APIs.
            </summary>
            <remarks>Only the basic set of tags needed for IntelliSense are exported and only for documented API
            members.  This is based on the  Microsoft IntelliSense build component.  That version only works with
            Microsoft-specific XML comments files and does not work with general XML comments files created by the
            compilers.</remarks>
            <example>
            <code lang="xml" title="Example configuration">
            &lt;!-- IntelliSense component configuration.  This must appear
                 before the TransformComponent. --&gt;
            &lt;component type="SandcastleBuilder.Components.IntelliSenseComponent"
              assembly="C:\SandcastleBuilder\SandcastleBuilder.Components.dll"&gt;
             &lt;!-- Output options (optional)
                  Attributes:
                     Include Namespaces (false by default)
                     Namespaces filename ("Namespaces" if not specified or empty)
                     Directory (current folder if not specified or empty) --&gt;
             &lt;output includeNamespaces="false" namespacesFile="Namespaces"
                 folder="C:\ProjectDocs\" /&gt;
            &lt;/component&gt;
            </code>
            </example>
        </member>
        <member name="M:SandcastleBuilder.Components.IntelliSenseComponent.#ctor(Microsoft.Ddue.Tools.BuildAssembler,System.Xml.XPath.XPathNavigator)">
            <summary>
            Constructor.
            </summary>
            <param name="assembler">A reference to the build assembler.</param>
            <param name="configuration">The configuration information</param>
        </member>
        <member name="M:SandcastleBuilder.Components.IntelliSenseComponent.Apply(System.Xml.XmlDocument,System.String)">
            <summary>
            This is implemented to extract the IntelliSense comments.
            </summary>
            <param name="document">The XML document with which to work.</param>
            <param name="key">The key (member name) of the item being documented.</param>
        </member>
        <member name="M:SandcastleBuilder.Components.IntelliSenseComponent.WriteComments(System.String,System.String,System.Xml.XPath.XPathNavigator)">
            <summary>
            Write the comments to the assembly's XML comments file
            </summary>
            <param name="key">The key (member name) of the item being documented.</param>
            <param name="filename">The assembly filename</param>
            <param name="navComments">The comments XPath navigator</param>
        </member>
        <member name="M:SandcastleBuilder.Components.IntelliSenseComponent.Dispose(System.Boolean)">
            <summary>
            Write out closing tags and close all open XML writers when disposed.
            </summary>
            <param name="disposing">Pass true to dispose of the managed and unmanaged resources or false to just
            dispose of the unmanaged resources.</param>
        </member>
        <member name="M:SandcastleBuilder.Components.IntelliSenseComponent.ConfigureComponent(System.String)">
            <summary>
            This static method is used by the Sandcastle Help File Builder to let the component perform its own
            configuration.
            </summary>
            <param name="currentConfig">The current configuration XML fragment</param>
            <returns>A string containing the new configuration XML fragment</returns>
        </member>
        <member name="T:SandcastleBuilder.Components.IntelliSenseConfigDlg">
            <summary>
            This form is used to configure the settings for the
            <see cref="T:SandcastleBuilder.Components.IntelliSenseComponent"/>.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Components.IntelliSenseConfigDlg.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="currentConfig">The current XML configuration
            XML fragment</param>
        </member>
        <member name="M:SandcastleBuilder.Components.IntelliSenseConfigDlg.btnCancel_Click(System.Object,System.EventArgs)">
            <summary>
            Close without saving
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Components.IntelliSenseConfigDlg.lnkCodePlexSHFB_LinkClicked(System.Object,System.Windows.Forms.LinkLabelLinkClickedEventArgs)">
            <summary>
            Go to the CodePlex home page of the Sandcastle Help File Builder
            project.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Components.IntelliSenseConfigDlg.btnOK_Click(System.Object,System.EventArgs)">
            <summary>
            Validate the configuration and save it
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Components.IntelliSenseConfigDlg.btnSelectFolder_Click(System.Object,System.EventArgs)">
            <summary>
            Select the base source folder
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="F:SandcastleBuilder.Components.IntelliSenseConfigDlg.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Components.IntelliSenseConfigDlg.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.Components.IntelliSenseConfigDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Components.IntelliSenseConfigDlg.Configuration">
            <summary>
            This is used to return the configuration information
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Components.MSHelpAttrComponent">
            <summary>
            This build component is used to add additional MS Help 2 attributes
            to the XML data island in each generated API topic.
            </summary>
            <example>
            <code lang="xml" title="Example configuration">
            &lt;!-- MS Help 2 attribute configuration.  This must appear after
                 the TransformComponent. --&gt;
            &lt;component type="SandcastleBuilder.Components.MSHelpAttrComponent"
              assembly="C:\SandcastleBuilder\SandcastleBuilder.Components.dll"&gt;
                &lt;!-- Additional attributes.  If no attributes are specified,
                     the component will do nothing. --&gt;
                &lt;attributes&gt;
                    &lt;!-- The "name" attribute is required.  The "value" attribute
                         is optional. --&gt;
                    &lt;attribute name="DocSet" value="NETFramework" / &gt;
                    &lt;attribute name="DocSet" value="ProjectNamespace" / &gt;
                    &lt;attribute name="TargetOS" value="Windows" / &gt;
                &lt;/attributes&gt;
            &lt;/component&gt;
            </code>
            </example>
        </member>
        <member name="M:SandcastleBuilder.Components.MSHelpAttrComponent.#ctor(Microsoft.Ddue.Tools.BuildAssembler,System.Xml.XPath.XPathNavigator)">
            <summary>
            Constructor
            </summary>
            <param name="assembler">A reference to the build assembler.</param>
            <param name="configuration">The configuration information</param>
            <remarks>See the <see cref="T:SandcastleBuilder.Components.MSHelpAttrComponent"/> class topic
            for an example of the configuration</remarks>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">This is thrown if
            an error is detected in the configuration.</exception>
        </member>
        <member name="M:SandcastleBuilder.Components.MSHelpAttrComponent.Apply(System.Xml.XmlDocument,System.String)">
            <summary>
            This is implemented to add the attributes to the XML data island.
            </summary>
            <param name="document">The XML document with which to work.</param>
            <param name="key">The key (member name) of the item being documented.</param>
        </member>
        <member name="T:SandcastleBuilder.Components.MultiFormatOutputComponent">
            <summary>
            This build component is used to execute one or more sets of build
            components each based on a specific help file output format.
            </summary>
            <remarks>One or more components can be executed based on a specified
            list of one or more help file output formats.  Only the components
            related to the requested set of format types will be executed.</remarks>
            <example>
            <code lang="xml" title="Example Configuration"
                source="..\..\SHFB\Source\SandcastleBuilderGUI\Templates\VS2005.config"
                region="Multi-format output component" />
            </example>
        </member>
        <member name="M:SandcastleBuilder.Components.MultiFormatOutputComponent.#ctor(Microsoft.Ddue.Tools.BuildAssembler,System.Xml.XPath.XPathNavigator)">
            <summary>
            Constructor
            </summary>
            <param name="assembler">A reference to the build assembler.</param>
            <param name="configuration">The configuration information</param>
        </member>
        <member name="M:SandcastleBuilder.Components.MultiFormatOutputComponent.Apply(System.Xml.XmlDocument,System.String)">
            <summary>
            This is implemented to execute each set of components for the
            requested output formats.
            </summary>
            <param name="document">The XML document with which to work.</param>
            <param name="key">The key (member name) of the item being documented.</param>
        </member>
        <member name="M:SandcastleBuilder.Components.MultiFormatOutputComponent.Dispose(System.Boolean)">
            <summary>
            Dispose of the nested components
            </summary>
            <param name="disposing">Pass true to dispose of the managed and unmanaged resources or false to just
            dispose of the unmanaged resources.</param>
        </member>
        <member name="P:SandcastleBuilder.Components.MultiFormatOutputComponent.CurrentFormat">
            <summary>
            This read-only property returns the current help format being generated
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Components.PostTransformComponent">
            <summary>
            This build component is obsolete and will be removed in a future release.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Components.PostTransformComponent.#ctor(Microsoft.Ddue.Tools.BuildAssembler,System.Xml.XPath.XPathNavigator)">
            <summary>
            Constructor
            </summary>
            <param name="assembler">A reference to the build assembler.</param>
            <param name="configuration">The configuration information</param>
            <remarks>This component is obsolete and will be removed in a future release.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Components.PostTransformComponent.Apply(System.Xml.XmlDocument,System.String)">
            <summary>
            This component is obsolete and will do nothing.
            </summary>
            <param name="document">The XML document with which to work.</param>
            <param name="key">The key (member name) of the item being documented.</param>
        </member>
        <member name="M:SandcastleBuilder.Components.PostTransformComponent.ConfigureComponent(System.String)">
            <summary>
            This static method is used by the Sandcastle Help File Builder to let the component perform its own
            configuration.
            </summary>
            <param name="currentConfig">The current configuration XML fragment</param>
            <returns>A string containing the new configuration XML fragment</returns>
        </member>
        <member name="T:SandcastleBuilder.Components.PostTransformConfigDlg">
            <summary>
            This form is used to configure the settings for the <see cref="T:SandcastleBuilder.Components.PostTransformComponent"/>
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Components.PostTransformConfigDlg.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="currentConfig">The current XML configuration
            XML fragment</param>
        </member>
        <member name="M:SandcastleBuilder.Components.PostTransformConfigDlg.btnCancel_Click(System.Object,System.EventArgs)">
            <summary>
            Close without saving
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Components.PostTransformConfigDlg.lnkCodePlexSHFB_LinkClicked(System.Object,System.Windows.Forms.LinkLabelLinkClickedEventArgs)">
            <summary>
            Go to the CodePlex home page of the Sandcastle Help File Builder
            project.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Components.PostTransformConfigDlg.txtLogoFile_Leave(System.Object,System.EventArgs)">
            <summary>
            Update the image information if it changed
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Components.PostTransformConfigDlg.pnlImage_Paint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            Draw the image on the panel using the width and height settings to give an idea of how big it
            will be.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="F:SandcastleBuilder.Components.PostTransformConfigDlg.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Components.PostTransformConfigDlg.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.Components.PostTransformConfigDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Components.PostTransformConfigDlg.Configuration">
            <summary>
            This is used to return the configuration information
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Components.ShowMissingComponent">
             <summary>
             This build component is used to add "missing" notes for missing summary, parameter, returns, value, and
             remarks tags.  It can also add default summary documentation for constructors.
             </summary>
             <example>
             <code lang="xml" title="Example configuration">
             &lt;!-- Show missing documentation component configuration.  This must
                  appear before the TransformComponent. --&gt;
             &lt;component type="SandcastleBuilder.Components.ShowMissingComponent"
               assembly="C:\SandcastleBuilder\SandcastleBuilder.Components.dll"&gt;
                 &lt;!-- All elements are optional. --&gt;
            
                 &lt;!-- Auto-document constructors (true by default) --&gt;
                 &lt;AutoDocumentConstructors value="true" /&gt;
            
                 &lt;!-- Auto-document dispose methods (true by default) --&gt;
                 &lt;AutoDocumentDisposeMethods value="true" /&gt;
            
                 &lt;!-- Show missing param tags (true by default) --&gt;
                 &lt;ShowMissingParams value="true" /&gt;
            
                 &lt;!-- Show missing typeparam tags (true by default) --&gt;
                 &lt;ShowMissingTypeParams value="true" /&gt;
            
                 &lt;!-- Show missing remarks tags (false by default) --&gt;
                 &lt;ShowMissingRemarks value="false" /&gt;
            
                 &lt;!-- Show missing returns tags (true by default) --&gt;
                 &lt;ShowMissingReturns value="true" /&gt;
            
                 &lt;!-- Show missing summary tags (true by default) --&gt;
                 &lt;ShowMissingSummaries value="true" /&gt;
            
                 &lt;!-- Show missing value tags (false by default) --&gt;
                 &lt;ShowMissingValues value="false" /&gt;
            
                 &lt;!-- Show missing namespace comments (true by default) --&gt;
                 &lt;ShowMissingNamespaces value="true" /&gt;
            
                 &lt;!-- Show missing include target docs (false by default) --&gt;
                 &lt;ShowMissingIncludeTargets value="false" /&gt;
            
                 &lt;!-- Shared content file containing the localized
                      messages (optional) --&gt;
                 &lt;contentFile filename="C:\Working\SharedContent.xml" /&gt;
             &lt;/component&gt;
             </code>
             </example>
        </member>
        <member name="M:SandcastleBuilder.Components.ShowMissingComponent.#ctor(Microsoft.Ddue.Tools.BuildAssembler,System.Xml.XPath.XPathNavigator)">
            <summary>
            Constructor
            </summary>
            <param name="assembler">A reference to the build assembler.</param>
            <param name="configuration">The configuration information</param>
            <remarks>See the <see cref="T:SandcastleBuilder.Components.ShowMissingComponent"/> class topic for an example of the configuration</remarks>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">This is thrown if an error is detected in the
            configuration.</exception>
        </member>
        <member name="M:SandcastleBuilder.Components.ShowMissingComponent.Apply(System.Xml.XmlDocument,System.String)">
            <summary>
            This is implemented to add the missing documentation tags
            </summary>
            <param name="document">The XML document with which to work.</param>
            <param name="key">The key (member name) of the item being documented.</param>
        </member>
        <member name="M:SandcastleBuilder.Components.ShowMissingComponent.CheckForMissingText(System.Xml.XmlNode,System.String,System.String)">
            <summary>
            Check for missing text in the specified documentation tag and, if it doesn't exist or the text is
            blank, add a "missing" message as the documentation tag's text.
            </summary>
            <param name="comments">The comments node to check.</param>
            <param name="key">The key (name) for the current item</param>
            <param name="tagName">The tag type for which to check.</param>
        </member>
        <member name="M:SandcastleBuilder.Components.ShowMissingComponent.CheckForMissingParameter(System.Xml.XmlNode,System.String,System.String,System.String)">
            <summary>
            Check for missing text in the specified &lt;param&gt; or &lt;typeparam&gt; tag and, if it doesn't
            exist or the text is blank, add a "missing" message as the tag's text.
            </summary>
            <param name="comments">The comments node to check.</param>
            <param name="key">The key (name) for the current item</param>
            <param name="paramName">The parameter name for which to check.</param>
            <param name="tagName">The tag type for which to check.</param>
        </member>
        <member name="M:SandcastleBuilder.Components.ShowMissingComponent.CheckForMissingIncludeTarget(System.Xml.XmlNode,System.String)">
            <summary>
            Check for bad <c>include</c> elements and, if any are found, add a "missing" message to the summary
            tag's text.
            </summary>
            <param name="comments">The comments node to check.</param>
            <param name="key">The key (name) for the current item</param>
        </member>
    </members>
</doc>
